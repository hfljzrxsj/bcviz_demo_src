##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
# sudo nginx -s reload
server {
  listen 80 default_server;
  listen [::]:80 default_server;

  # SSL configuration
  #
  # listen 443 ssl default_server;
  # listen [::]:443 ssl default_server;
  #
  # Note: You should disable gzip for SSL traffic.
  # See: https://bugs.debian.org/773332
  #
  # Read up on ssl_ciphers to ensure a secure configuration.
  # See: https://bugs.debian.org/765782
  #
  # Self signed certs generated by the ssl-cert package
  # Don't use them in a production server!
  #
  # include snippets/snakeoil.conf;

  root /etc/nginx/sites-available/bcviz_demo;

  # Add index.php to the list if you are using PHP
  index index.html index.htm index.nginx-debian.html;

  # server_name _;

  server_name localhost;

  set $valid 1;

  # if ($http_upgrade_insecure_requests = "") { # ico文件不带这个
  #   set $valid 0;
  # }
  # if ($http_referer = "") { # index.html文件不带这个
  #   set $valid 0;
  # }

  # 检查HTTP版本是否为HTTP/1.1
  if ($server_protocol != "HTTP/1.1") {
    set $valid 0;
  }

  # 检查必需的请求头是否存在
  if ($http_host = "") {
    set $valid 0;
  }
  if ($http_connection = "") {
    set $valid 0;
  }
  if ($http_accept = "") {
    set $valid 0;
  }
  if ($http_accept_encoding = "") {
    set $valid 0;
  }
  if ($http_accept_language = "") {
    set $valid 0;
  }
  if ($http_user_agent = "") {
    set $valid 0;
  }
  if ($http_user_agent ~* "(bot|crawler|spider|scrape|slurp|feed|monitor|phantomjs|headless|selenium|python-requests|curl)") {
    set $valid 0;
  }

  if ($CONTENT_TYPE != "") {
    set $valid 0;
  }
  if ($CONTENT_LENGTH != "") {
    set $valid 0;
  }

  # 如果验证失败，拒绝请求
  if ($valid = 0) {
    return 403;
  }

  # 禁止访问.git
  location ~ /\. {
    deny all;
    return 404;
    access_log off;
  }

  # 全局配置响应头
  # expires 86400s;
  # add_header Vary "Accept-Encoding";
  allow all;
  expires max;
  charset utf-8;
  server_tokens off;
  default_type text/plain;
  gzip on;
  # 设置允许压缩的最小响应体大小，小于该值的响应将不会被压缩
  gzip_min_length 1;
  # 设置 Gzip 压缩级别，取值范围为 1 - 9，1 压缩速度最快，9 压缩比最高
  gzip_comp_level 9;
  # 添加 Vary: Accept-Encoding 响应头，告诉缓存服务器内容已被压缩
  gzip_vary on;
  types_hash_bucket_size 128;
  gzip_types *;
  gzip_proxied any;
  gzip_http_version 1.1;
  # 启用静态压缩
  gzip_static on;
  # 如果客户端不支持 gzip，则发送原始文件
  gunzip on;
  add_header Access-Control-Allow-Origin * always;
  add_header Access-Control-Allow-Methods * always;
  add_header Access-Control-Allow-Credentials true always;
  add_header Access-Control-Allow-Headers * always;
  add_header Access-Control-Max-Age 86400000 always;
  add_header Accept-Ranges bytes always;
  location ~ \.html$ {
    # expires 1y;
    # 开启 ETag
    etag on;
    # 设置 Last-Modified 头
    # add_header Last-Modified $date_gmt;
  }
  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }
  location /api/v1 {
    # add_header Content-type text/plain;
    # add_header Expires "Thu, 01 Jan 2028 12:00:00 GMT";
    # add_header Cache-Control "public, max-age=86400000, s-maxage=31536000, immutable";
    # 31536000是365天，86400000是1000天
    fastcgi_param SCRIPT_FILENAME $DOCUMENT_ROOT/../v1/script.mjs;
    fastcgi_pass unix:/var/run/fcgiwrap.socket;
    include fastcgi_params;
  }
  location = /api/BCviz/v3 {
    fastcgi_param SCRIPT_FILENAME /etc/nginx/sites-available/v3/search-BCviz/v3.js;
    fastcgi_pass unix:/var/run/fcgiwrap.socket;
    include fastcgi_params;
  }
  location = /api/test {
    # add_header hjx hjx always;
    # fastcgi_param SCRIPT_FILENAME $DOCUMENT_ROOT/../test.mjs;
    # fastcgi_pass unix:/var/run/fcgiwrap.socket;
    # include fastcgi_params;
    return 204;
  }

  # pass PHP scripts to FastCGI server
  #
  #location ~ \.php$ {
  #	include snippets/fastcgi-php.conf;
  #
  #	# With php-fpm (or other unix sockets):
  #	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
  #	# With php-cgi (or other tcp sockets):
  #	fastcgi_pass 127.0.0.1:9000;
  #}
  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  #
  #location ~ /\.ht {
  #	deny all;
  #}
}
server {
  listen 4173 default_server;
  listen [::]:4173 default_server;

  root /etc/nginx/sites-available/develop;

  # location = /test.html {
  #   if ($http_host !~ ^(localhost|127\.0\.0\.1)$) {
  #     return 403;
  #   }
  #   # 指定文件路径（根据实际配置调整）
  #   root /usr/share/nginx/html;
  #   # 其他配置（如索引文件）
  #   index index.html;
  # }
  # location /api/BCviz {
  #   expires max;
  #   fastcgi_param SCRIPT_FILENAME /etc/nginx/sites-available/v2/search-BCviz/MBS_bash.bash;
  #   fastcgi_pass unix:/var/run/fcgiwrap.socket;
  #   include fastcgi_params;
  # }
  # location /api/BCviz/MaximumBiclique {
  #   fastcgi_param SCRIPT_FILENAME /etc/nginx/sites-available/search-BCviz/MBS;
  #   fastcgi_pass unix:/var/run/fcgiwrap.socket;
  #   include fastcgi_params;
  # }

  # location ~* \.(js|css|txt|ico|json)$ {
  #   # expires 31536000s;
  # }
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}